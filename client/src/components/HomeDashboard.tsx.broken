import React from 'react';import React from 'react';import React, { useState, useEffect } from 'react';import React, { useState, useEffect } from 'react';import React, { useState, useEffect } from 'react';import React, { useState, useEffect } from 'react';



interface HomeDashboardProps {import { Card } from './Card';

  setViewingTenantId: (id: string) => void;

}import { useAuth } from '../contexts/AuthContext';import { Card } from './Card';



export const HomeDashboard: React.FC<HomeDashboardProps> = ({ setViewingTenantId }) => {import { DollarSign, Wrench, Bell, TrendingUp } from './icons';

  return (

    <div className="p-6 space-y-6">import { useAuth } from '../contexts/AuthContext';import { Card } from './Card';

      <h1>Dashboard</h1>

      <p>Loading...</p>interface HomeDashboardProps {

    </div>

  );  setViewingTenantId: (id: string) => void;import { DollarSign, Wrench, Bell, TrendingUp } from './icons';

};
}

import { useAuth } from '../contexts/AuthContext';import { Card } from './Card';import { Card } from './Card';

export const HomeDashboard: React.FC<HomeDashboardProps> = ({ setViewingTenantId }) => {

    const { user } = useAuth();interface HomeDashboardProps {



    return (  setViewingTenantId: (id: string) => void;import { DollarSign, Wrench, Bell, TrendingUp } from './icons';

        <div className="p-6 space-y-6">

            <div>}

                <h1 className="text-3xl font-bold font-atkinson text-text-main">

                    Welcome back, {user?.firstName}!import { propertiesAPI, serviceRequestsAPI } from '../services/api';import { dashboardAPI, propertiesAPI, serviceRequestsAPI } from '../services/api';

                </h1>

                <p className="text-text-secondary mt-2">export const HomeDashboard: React.FC<HomeDashboardProps> = ({ setViewingTenantId }) => {

                    Here's what's happening with your properties today.

                </p>    const { user } = useAuth();interface HomeDashboardProps {

            </div>

    const [loading, setLoading] = useState(true);

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">

                <Card>  setViewingTenantId: (id: string) => void;import { useAuth } from '../contexts/AuthContext';import { useAuth } from '../contexts/AuthContext';

                    <div className="flex items-start justify-between">

                        <div>    useEffect(() => {

                            <p className="text-sm text-text-secondary">Total Properties</p>

                            <p className="text-3xl font-bold text-text-main mt-1">5</p>        // Simulate loading}

                        </div>

                        <div className="p-3 rounded-lg bg-green-100 text-green-600">        setTimeout(() => setLoading(false), 1000);

                            <DollarSign className="w-6 h-6" />

                        </div>    }, []);import { HomeStat, ActionCenterItem } from '../types';import { HomeStat, ActionCenterItem } from '../types';

                    </div>

                </Card>



                <Card>    if (loading) {export const HomeDashboard: React.FC<HomeDashboardProps> = ({ setViewingTenantId }) => {

                    <div className="flex items-start justify-between">

                        <div>        return (

                            <p className="text-sm text-text-secondary">Service Requests</p>

                            <p className="text-3xl font-bold text-text-main mt-1">8</p>            <div className="p-6">    const { user } = useAuth();import { Search, ChevronDown, ChevronRight, DollarSign, ArrowUp, ArrowDown, Settings, Wrench, Bell, FileWarning, TrendingUp } from './icons';import { Search, ChevronDown, ChevronRight, DollarSign, ArrowUp, ArrowDown, Settings, Wrench, Bell, FileWarning, TrendingUp } from './icons';

                        </div>

                        <div className="p-3 rounded-lg bg-orange-100 text-orange-600">                <div className="animate-pulse space-y-6">

                            <Wrench className="w-6 h-6" />

                        </div>                    <div className="h-8 bg-gray-200 rounded w-1/4"></div>    const [loading, setLoading] = useState(true);

                    </div>

                </Card>                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">



                <Card>                        {[...Array(4)].map((_, i) => (import { FinancialOverviewChart } from './charts/FinancialOverviewChart';import { FinancialOverviewChart } from './charts/FinancialOverviewChart';

                    <div className="flex items-start justify-between">

                        <div>                            <div key={i} className="h-32 bg-gray-200 rounded"></div>

                            <p className="text-sm text-text-secondary">Pending Items</p>

                            <p className="text-3xl font-bold text-text-main mt-1">3</p>                        ))}    useEffect(() => {

                        </div>

                        <div className="p-3 rounded-lg bg-red-100 text-red-600">                    </div>

                            <Bell className="w-6 h-6" />

                        </div>                </div>        // Simulate loadingimport { ServiceRequestVolumeChart } from './charts/ServiceRequestVolumeChart';import { ServiceRequestVolumeChart } from './charts/ServiceRequestVolumeChart';

                    </div>

                </Card>            </div>



                <Card>        );        setTimeout(() => setLoading(false), 1000);

                    <div className="flex items-start justify-between">

                        <div>    }

                            <p className="text-sm text-text-secondary">Monthly Revenue</p>

                            <p className="text-3xl font-bold text-text-main mt-1">৳2.1L</p>    }, []);

                        </div>

                        <div className="p-3 rounded-lg bg-green-100 text-green-600">    return (

                            <TrendingUp className="w-6 h-6" />

                        </div>        <div className="p-6 space-y-6">

                    </div>

                </Card>            <div>

            </div>

                <h1 className="text-3xl font-bold font-atkinson text-text-main">    if (loading) {interface HomeDashboardProps {interface HomeDashboardProps {

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">

                <Card>                    Welcome back, {user?.firstName}!

                    <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">

                        Your Properties                </h1>        return (

                    </h3>

                    <div className="space-y-3">                <p className="text-text-secondary mt-2">

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Gulshan Heights</h4>                    Here's what's happening with your properties today.            <div className="p-6">  setViewingTenantId: (id: string) => void;  setViewingTenantId: (id: string) => void;

                            <p className="text-sm text-text-secondary">12 units • 10 occupied</p>

                        </div>                </p>

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Dhanmondi Towers</h4>            </div>                <div className="animate-pulse space-y-6">

                            <p className="text-sm text-text-secondary">8 units • 7 occupied</p>

                        </div>

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Banani Complex</h4>            {/* Stats Grid */}                    <div className="h-8 bg-gray-200 rounded w-1/4"></div>}}

                            <p className="text-sm text-text-secondary">15 units • 12 occupied</p>

                        </div>            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">

                    </div>

                </Card>                <Card>                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">



                <Card>                    <div className="flex items-start justify-between">

                    <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">

                        Recent Activity                        <div>                        {[...Array(4)].map((_, i) => (

                    </h3>

                    <div className="space-y-3">                            <p className="text-sm text-text-secondary">Total Properties</p>

                        <div className="flex items-start space-x-3">

                            <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>                            <p className="text-3xl font-bold text-text-main mt-1">5</p>                            <div key={i} className="h-32 bg-gray-200 rounded"></div>

                            <div>

                                <p className="text-sm font-medium text-text-main">New application received</p>                        </div>

                                <p className="text-xs text-text-secondary">Unit 5A, Gulshan Heights • 2h ago</p>

                            </div>                        <div className="p-3 rounded-lg bg-green-100 text-green-600">                        ))}interface DashboardData {interface DashboardData {

                        </div>

                        <div className="flex items-start space-x-3">                            <DollarSign className="w-6 h-6" />

                            <div className="w-2 h-2 bg-orange-500 rounded-full mt-2"></div>

                            <div>                        </div>                    </div>

                                <p className="text-sm font-medium text-text-main">Service request submitted</p>

                                <p className="text-xs text-text-secondary">AC repair needed • 4h ago</p>                    </div>

                            </div>

                        </div>                </Card>                </div>  stats: HomeStat[];  stats: HomeStat[];

                        <div className="flex items-start space-x-3">

                            <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>

                            <div>

                                <p className="text-sm font-medium text-text-main">Rent payment received</p>                <Card>            </div>

                                <p className="text-xs text-text-secondary">Unit 3B payment • 1d ago</p>

                            </div>                    <div className="flex items-start justify-between">

                        </div>

                    </div>                        <div>        );  properties: any[];  properties: any[];

                </Card>

            </div>                            <p className="text-sm text-text-secondary">Active Service Requests</p>

        </div>

    );                            <p className="text-3xl font-bold text-text-main mt-1">3</p>    }

};
                        </div>

                        <div className="p-3 rounded-lg bg-orange-100 text-orange-600">  serviceRequests: any[];  serviceRequests: any[];

                            <Wrench className="w-6 h-6" />

                        </div>    return (

                    </div>

                </Card>        <div className="p-6 space-y-6">  actionItems: ActionCenterItem[];  actionItems: ActionCenterItem[];



                <Card>            <div>

                    <div className="flex items-start justify-between">

                        <div>                <h1 className="text-3xl font-bold font-atkinson text-text-main">  loading: boolean;  loading: boolean;

                            <p className="text-sm text-text-secondary">Pending Requests</p>

                            <p className="text-3xl font-bold text-text-main mt-1">2</p>                    Welcome back, {user?.firstName}!

                        </div>

                        <div className="p-3 rounded-lg bg-red-100 text-red-600">                </h1>  error: string | null;  error: string | null;

                            <Bell className="w-6 h-6" />

                        </div>                <p className="text-text-secondary mt-2">

                    </div>

                </Card>                    Here's what's happening with your properties today.}}



                <Card>                </p>

                    <div className="flex items-start justify-between">

                        <div>            </div>

                            <p className="text-sm text-text-secondary">Completed This Month</p>

                            <p className="text-3xl font-bold text-text-main mt-1">12</p>

                        </div>

                        <div className="p-3 rounded-lg bg-green-100 text-green-600">            {/* Stats Grid */}const StatCard: React.FC<{ stat: HomeStat }> = ({ stat }) => {interface HomeDashboardProps {

                            <TrendingUp className="w-6 h-6" />

                        </div>            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">

                    </div>

                </Card>                <Card>    const colorVariants: { [key: string]: string } = {  setViewingTenantId: (id: string) => void;

            </div>

                    <div className="flex items-start justify-between">

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">

                <Card>                        <div>        orange: 'bg-orange-100 text-orange-600',}

                    <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">

                        Recent Properties                            <p className="text-sm text-text-secondary">Total Properties</p>

                    </h3>

                    <div className="space-y-3">                            <p className="text-3xl font-bold text-text-main mt-1">5</p>        red: 'bg-red-100 text-red-600',

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Gulshan Heights</h4>                        </div>

                            <p className="text-sm text-text-secondary">Plot 15, Road 11, Gulshan-1</p>

                        </div>                        <div className="p-3 rounded-lg bg-green-100 text-green-600">        yellow: 'bg-yellow-100 text-yellow-600',const StatCard: React.FC<{ stat: HomeStat }> = ({ stat }) => {

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Dhanmondi Towers</h4>                            <DollarSign className="w-6 h-6" />

                            <p className="text-sm text-text-secondary">House 32, Road 7, Dhanmondi</p>

                        </div>                        </div>        green: 'bg-green-100 text-green-600',    const colorVariants = {

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Banani Complex</h4>                    </div>

                            <p className="text-sm text-text-secondary">Plot 25, Banani C/A</p>

                        </div>                </Card>    };        orange: 'bg-orange-100 text-orange-600',

                    </div>

                </Card>



                <Card>                <Card>    return (        red: 'bg-red-100 text-red-600',

                    <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">

                        Recent Activity                    <div className="flex items-start justify-between">

                    </h3>

                    <div className="space-y-3">                        <div>        <Card>        yellow: 'bg-yellow-100 text-yellow-600',

                        <div className="flex items-start space-x-3">

                            <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>                            <p className="text-sm text-text-secondary">Active Service Requests</p>

                            <div>

                                <p className="text-sm font-medium text-text-main">New tenant application</p>                            <p className="text-3xl font-bold text-text-main mt-1">3</p>            <div className="flex items-start justify-between">        green: 'bg-green-100 text-green-600',

                                <p className="text-xs text-text-secondary">2 hours ago</p>

                            </div>                        </div>

                        </div>

                        <div className="flex items-start space-x-3">                        <div className="p-3 rounded-lg bg-orange-100 text-orange-600">                <div>    };

                            <div className="w-2 h-2 bg-orange-500 rounded-full mt-2"></div>

                            <div>                            <Wrench className="w-6 h-6" />

                                <p className="text-sm font-medium text-text-main">Service request created</p>

                                <p className="text-xs text-text-secondary">4 hours ago</p>                        </div>                    <p className="text-sm text-text-secondary">{stat.label}</p>    return (

                            </div>

                        </div>                    </div>

                        <div className="flex items-start space-x-3">

                            <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>                </Card>                    <p className="text-3xl font-bold text-text-main mt-1">{stat.value}</p>        <Card>

                            <div>

                                <p className="text-sm font-medium text-text-main">Payment received</p>

                                <p className="text-xs text-text-secondary">1 day ago</p>

                            </div>                <Card>                </div>            <div className="flex items-start justify-between">

                        </div>

                    </div>                    <div className="flex items-start justify-between">

                </Card>

            </div>                        <div>                <div className={`p-3 rounded-lg ${colorVariants[stat.color] || 'bg-gray-100 text-gray-600'}`}>                <div>

        </div>

    );                            <p className="text-sm text-text-secondary">Pending Requests</p>

};
                            <p className="text-3xl font-bold text-text-main mt-1">2</p>                    <stat.icon className="w-6 h-6" />                    <p className="text-sm text-text-secondary">{stat.label}</p>

                        </div>

                        <div className="p-3 rounded-lg bg-red-100 text-red-600">                </div>                    <p className="text-3xl font-bold text-text-main mt-1">{stat.value}</p>

                            <Bell className="w-6 h-6" />

                        </div>            </div>                </div>

                    </div>

                </Card>        </Card>                <div className={`p-3 rounded-lg ${colorVariants[stat.color]}`}>



                <Card>    );                    <stat.icon className="w-6 h-6" />

                    <div className="flex items-start justify-between">

                        <div>};                </div>

                            <p className="text-sm text-text-secondary">Completed This Month</p>

                            <p className="text-3xl font-bold text-text-main mt-1">12</p>            </div>

                        </div>

                        <div className="p-3 rounded-lg bg-green-100 text-green-600">const ActionCenter: React.FC<{ actionItems: ActionCenterItem[] }> = ({ actionItems }) => (        </Card>

                            <TrendingUp className="w-6 h-6" />

                        </div>    <Card className="h-full">    );

                    </div>

                </Card>        <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">Action Center</h3>};

            </div>

        <div className="space-y-3">

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">

                <Card>            {actionItems.map((item, index) => (const ActionCenter: React.FC = () => (

                    <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">

                        Recent Properties                <button key={index} className={`w-full flex items-center p-3 rounded-lg transition-colors text-left ${item.isAlert ? 'bg-pink-50 hover:bg-pink-100' : 'hover:bg-gray-50'}`}>    <Card className="h-full">

                    </h3>

                    <div className="space-y-3">                    <item.icon className={`w-5 h-5 mr-3 ${item.isAlert ? 'text-brand-pink' : 'text-text-secondary'}`} />        <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">Action Center</h3>

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Gulshan Heights</h4>                    <span className={`font-semibold text-sm ${item.isAlert ? 'text-brand-pink' : 'text-text-main'}`}>{item.label}</span>        <div className="space-y-3">

                            <p className="text-sm text-text-secondary">Plot 15, Road 11, Gulshan-1</p>

                        </div>                    <ChevronRight className="w-4 h-4 ml-auto text-gray-400" />            {ACTION_CENTER_ITEMS.map((item, index) => (

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Dhanmondi Towers</h4>                </button>                <button key={index} className={`w-full flex items-center p-3 rounded-lg transition-colors text-left ${item.isAlert ? 'bg-pink-50 hover:bg-pink-100' : 'hover:bg-gray-50'}`}>

                            <p className="text-sm text-text-secondary">House 32, Road 7, Dhanmondi</p>

                        </div>            ))}                    <item.icon className={`w-5 h-5 mr-3 ${item.isAlert ? 'text-brand-pink' : 'text-text-secondary'}`} />

                        <div className="p-3 bg-gray-50 rounded-lg">

                            <h4 className="font-medium text-text-main">Banani Complex</h4>        </div>                    <span className={`font-semibold text-sm ${item.isAlert ? 'text-brand-pink' : 'text-text-main'}`}>{item.label}</span>

                            <p className="text-sm text-text-secondary">Plot 25, Banani C/A</p>

                        </div>    </Card>                    <ChevronRight className="w-4 h-4 ml-auto text-gray-400" />

                    </div>

                </Card>);                </button>



                <Card>            ))}

                    <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">

                        Recent Activityexport const HomeDashboard: React.FC<HomeDashboardProps> = ({ setViewingTenantId }) => {        </div>

                    </h3>

                    <div className="space-y-3">    const { user } = useAuth();    </Card>

                        <div className="flex items-start space-x-3">

                            <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>    const [dashboardData, setDashboardData] = useState<DashboardData>({);

                            <div>

                                <p className="text-sm font-medium text-text-main">New tenant application</p>        stats: [],

                                <p className="text-xs text-text-secondary">2 hours ago</p>

                            </div>        properties: [],const HighPriorityTenants: React.FC<{ tenants: HighPriorityTenant[], setViewingTenantId: (id: string) => void }> = ({ tenants, setViewingTenantId }) => (

                        </div>

                        <div className="flex items-start space-x-3">        serviceRequests: [],    <Card>

                            <div className="w-2 h-2 bg-orange-500 rounded-full mt-2"></div>

                            <div>        actionItems: [],        <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">High-Priority Tenants</h3>

                                <p className="text-sm font-medium text-text-main">Service request created</p>

                                <p className="text-xs text-text-secondary">4 hours ago</p>        loading: true,        <div className="space-y-2">

                            </div>

                        </div>        error: null            {tenants.map((tenant) => (

                        <div className="flex items-start space-x-3">

                            <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>    });                <button key={tenant.id} onClick={() => setViewingTenantId(tenant.id)} className="w-full flex items-center p-2 rounded-lg hover:bg-gray-50 text-left">

                            <div>

                                <p className="text-sm font-medium text-text-main">Payment received</p>                    <img src={tenant.avatar} alt={tenant.name} className="w-9 h-9 rounded-full"/>

                                <p className="text-xs text-text-secondary">1 day ago</p>

                            </div>    useEffect(() => {                    <div className="ml-3 flex-grow">

                        </div>

                    </div>        loadDashboardData();                        <p className="text-sm font-bold text-text-main">{tenant.name}</p>

                </Card>

            </div>    }, []);                        <p className="text-xs text-text-secondary">{tenant.unit}</p>

        </div>

    );                    </div>

};
    const loadDashboardData = async () => {                    <div className="text-right">

        try {                         <p className="text-sm font-bold text-red-500">{tenant.daysOverdue} days</p>

            setDashboardData(prev => ({ ...prev, loading: true, error: null }));                         <p className="text-xs text-text-secondary">Overdue</p>

                    </div>

            const [properties, serviceRequests] = await Promise.all([                </button>

                propertiesAPI.getAll(),            ))}

                serviceRequestsAPI.getAll()        </div>

            ]);    </Card>

);

            // Calculate stats from real data

            const stats: HomeStat[] = [

                { export const HomeDashboard: React.FC<HomeDashboardProps> = ({ setViewingTenantId }) => {

                    label: 'Total Properties',   return (

                    value: properties.length.toString(),     <div className="container mx-auto">

                    icon: DollarSign,       <header className="flex flex-col md:flex-row justify-between md:items-center mb-8 gap-4">

                    color: 'green'         <div>

                },          <h1 className="text-3xl font-bold font-atkinson text-text-main">

                {             Hello Famu 👋

                    label: 'Active Service Requests',           </h1>

                    value: serviceRequests.filter((req: any) => req.status !== 'completed').length.toString(),           <p className="text-text-secondary mt-1">Here's all your metrics at a glance!</p>

                    icon: Wrench,         </div>

                    color: 'orange'         <div className="relative">

                },            <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />

                {             <input 

                    label: 'Pending Requests',                 type="text" 

                    value: serviceRequests.filter((req: any) => req.status === 'new').length.toString(),                 placeholder="Search anything..."

                    icon: Bell,                 className="w-full md:w-72 pl-10 pr-4 py-2 border border-gray-200 bg-card-bg rounded-lg text-sm focus:ring-2 focus:ring-accent-secondary focus:border-transparent"

                    color: 'red'             />

                },        </div>

                {       </header>

                    label: 'Completed This Month',       

                    value: serviceRequests.filter((req: any) => req.status === 'completed').length.toString(),       <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">

                    icon: TrendingUp,         {HOME_STATS.map(stat => (

                    color: 'green'             <StatCard key={stat.label} stat={stat} />

                }        ))}

            ];      </div>



            // Generate action items based on data      <div className="grid grid-cols-1 lg:grid-cols-5 gap-8 items-start">

            const actionItems: ActionCenterItem[] = [        <div className="lg:col-span-3 flex flex-col space-y-8">

                {            <Card>

                    label: `${serviceRequests.filter((req: any) => req.status === 'new').length} New Service Requests`,                <div className="flex justify-between items-center mb-4">

                    icon: Bell,                    <h3 className="font-atkinson text-xl font-bold text-text-main">Financial Overview</h3>

                    isAlert: serviceRequests.filter((req: any) => req.status === 'new').length > 0                    <button className="flex items-center text-sm font-medium text-gray-600 bg-white border border-gray-200 rounded-lg px-3 py-1 hover:bg-gray-50">

                },                        Quarterly

                {                        <ChevronDown className="w-4 h-4 ml-1" />

                    label: `${serviceRequests.filter((req: any) => req.priority === 'high').length} High Priority Items`,                    </button>

                    icon: FileWarning,                </div>

                    isAlert: serviceRequests.filter((req: any) => req.priority === 'high').length > 0                <div className="h-72">

                },                    <FinancialOverviewChart data={FINANCIAL_OVERVIEW_DATA} />

                {                </div>

                    label: `${properties.length} Properties to Review`,            </Card>

                    icon: Settings,             <Card>

                    isAlert: false                <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">Service Request Volume</h3>

                }                <div className="h-72">

            ];                    <ServiceRequestVolumeChart data={SERVICE_REQUEST_VOLUME_DATA} />

                </div>

            setDashboardData({            </Card>

                stats,        </div>

                properties,        <div className="lg:col-span-2 flex flex-col space-y-8">

                serviceRequests,            <ActionCenter />

                actionItems,            <HighPriorityTenants tenants={HIGH_PRIORITY_TENANTS_DATA} setViewingTenantId={setViewingTenantId} />

                loading: false,        </div>

                error: null      </div>

            });    </div>

  );

        } catch (error: any) {};
            console.error('Error loading dashboard data:', error);
            setDashboardData(prev => ({
                ...prev,
                loading: false,
                error: error.message || 'Failed to load dashboard data'
            }));
        }
    };

    // Mock data for charts (you can replace with real calculations)
    const mockFinancialData = [
        { name: 'Jan', revenue: 45000, expenses: 25000, profit: 20000 },
        { name: 'Feb', revenue: 52000, expenses: 28000, profit: 24000 },
        { name: 'Mar', revenue: 48000, expenses: 26000, profit: 22000 },
        { name: 'Apr', revenue: 61000, expenses: 32000, profit: 29000 },
        { name: 'May', revenue: 55000, expenses: 29000, profit: 26000 },
        { name: 'Jun', revenue: 67000, expenses: 35000, profit: 32000 },
    ];

    const mockServiceRequestData = [
        { name: 'Jan', requests: 12 },
        { name: 'Feb', requests: 19 },
        { name: 'Mar', requests: 15 },
        { name: 'Apr', requests: 25 },
        { name: 'May', requests: 18 },
        { name: 'Jun', requests: 22 },
    ];

    if (dashboardData.loading) {
        return (
            <div className="p-6">
                <div className="animate-pulse space-y-6">
                    <div className="h-8 bg-gray-200 rounded w-1/4"></div>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        {[...Array(4)].map((_, i) => (
                            <div key={i} className="h-32 bg-gray-200 rounded"></div>
                        ))}
                    </div>
                </div>
            </div>
        );
    }

    if (dashboardData.error) {
        return (
            <div className="p-6">
                <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
                    Error: {dashboardData.error}
                    <button 
                        onClick={loadDashboardData}
                        className="ml-4 text-sm underline hover:no-underline"
                    >
                        Retry
                    </button>
                </div>
            </div>
        );
    }

    return (
        <div className="p-6 space-y-6">
            {/* Header */}
            <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                <div>
                    <h1 className="text-3xl font-bold font-atkinson text-text-main">
                        Welcome back, {user?.firstName}!
                    </h1>
                    <p className="text-text-secondary mt-2">Here's what's happening with your properties today.</p>
                </div>
                
                <div className="flex items-center gap-3">
                    <div className="relative">
                        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
                        <input 
                            type="text" 
                            placeholder="Search properties, tenants..." 
                            className="pl-10 pr-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-accent-secondary w-64"
                        />
                    </div>
                    <button className="flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-200 rounded-lg hover:bg-gray-50">
                        This Month <ChevronDown className="w-4 h-4" />
                    </button>
                </div>
            </div>

            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {dashboardData.stats.map((stat, index) => (
                    <StatCard key={index} stat={stat} />
                ))}
            </div>

            {/* Charts and Action Center */}
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <div className="lg:col-span-2 space-y-6">
                    <Card>
                        <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">Financial Overview</h3>
                        <FinancialOverviewChart data={mockFinancialData} />
                    </Card>
                    
                    <Card>
                        <h3 className="font-atkinson text-xl font-bold text-text-main mb-4">Service Request Volume</h3>
                        <ServiceRequestVolumeChart data={mockServiceRequestData} />
                    </Card>
                </div>
                
                <ActionCenter actionItems={dashboardData.actionItems} />
            </div>
        </div>
    );
};